openapi: 3.0.1
info:
  version: 1.0.3
  title: Base-Slim-Skeleton
  description: Structure de base d'un api créé dans le cadre du cours `Services Web H2022`
  contact:
    email: "webdevteam@rvdprojects.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "http://localhost/base-slim-skeleton/"
basePath: ""

servers: 
  - url: https://localhost/base-slim-skeleton
  - url: http://localhost/base-slim-skeleton

tags:
- name: All Get
  description: All get endpoints
- name: All Post
  description: All post endpoints
- name: All Put
  description: All put endpoints
- name: All Delete
  description: All delete endpoints

- name: General
  description: All about global endpoints
- name: Users
  description: All about users endpoints



schemes:
- "https"
- "http"
paths:
  /:
    get:
      tags:
        - All Get
        - General
      summary: Message de bienvenue 
      operationId: getHome
      responses:
        '200': 
          description: 
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Welcome'
              example:
                success: true
                message : 'Hello world!'
                

  /docs:
    get:
      tags:
        - All Get
        - General
      summary: Renvoit la page web de documentation de l'API
      responses:
        '200': 
          description: HTML
            

  /users:
      get:
        tags: 
          - All Get
          - Users
        summary: Selection d'uagsers multiple.
        description: ""
        responses:
          '201': 
            description: Une liste d'usagers
            content:
              application/json:
                schema:
                  type: array  
                  items:
                    $ref: '#/components/schemas/User'
          '400': 
            description: Erreur de validation lors de la requête
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserValidationErrors'

          '404': 
            description: Aucun usager trouvé selon les critères
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserNotFoundErrors'
      post:
        tags: 
          - All Post
          - Users
        summary: Création d'un usager.
        requestBody:
          description: Les informations de l'usager à créer
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
        responses:
          '201': 
            description: Le id de l'usager créé
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user_id:
                      type: integer
          '400': 
            description: Erreur de validation lors de la requête
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
        security:
        x-codegen-request-body-name: body

  /users/{id}:
      put:
        tags: 
          - All Put
          - Users
        summary: Mise à jour d'un usager.
        requestBody:
          description: Les informations de l'usager à modifier
          required: true
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserUpdate'
        responses:
          '201': 
            description: L'information de l'usager mis à jour
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'

          '400': 
            description: Erreur de validation lors de la requête
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      $ref: '#/components/schemas/UserValidationErrors'

          '404':
            description: Aucun usager trouvé selon les critères
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      $ref: '#/components/schemas/UserNotFoundErrors'

      get:
        tags:
          - All Get
          - Users
        summary: Sélection d'un usager.
        responses:
          '201': 
            description: L'information de l'usager
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
                    
          '404': 
            description: Aucun usager trouvé selon les critères
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserNotFoundErrors'
      delete:
        tags:
          - All Delete
          - Users
        summary: Suppression d'un usager.
        responses:
          '201': 
            description: L'information de l'usager
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
                    
          '404': 
            description: Aucun usager trouvé selon les critères
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserNotFoundErrors'





components:
  schemas:

    Welcome:
      properties:
        success:
          type: boolean
        message:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        first_Name:
          type: string
        last_Name:
          type: string
        email:
          type: string

    UserUpdate:
      type: object
      properties: 
        username:
          type: string
        first_Name:
          type: string
        last_Name:
          type: string
        email:
          type: string

    UserNotFoundErrors:
      type: object
      properties:
        errrorDescription:
          type: string
        users/{filter}:
          type: string
        users/{order}:
          type: string
        users/{include}:
          type: string
        users/{exclude}:
          type: string
        users/{limit}:
          type: string
    
    UserValidationErrors:
      type: object
      properties:
        errrorDescription:
          type: string
        username:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string